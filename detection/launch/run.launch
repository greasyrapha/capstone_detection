<?xml version="1.0"?>

<launch>
    <param name="robot_description" textfile="$(find omo_r1_description)/urdf/omo_r1.urdf.xacro" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <param name="/use_sim_time" value="false"/>

    <node pkg="rviz" type="rviz" name="rviz"
      args="-d $(find carto_slam)/rviz/carto_slam.rviz"/>

    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
      <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
      <param name="serial_baudrate" type="int" value="256000"/>
      <param name="frame_id" type="string" value="laser"/>
      <param name="inverted" type="bool" value="false"/>
      <param name="angle_compensate" type="bool" value="true"/>
      <param name="scan_mode" type="string" value="Sensitivity"/>
    </node>

    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find carto_slam)/config
          -configuration_basename ct_config.lua" output="screen">
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base_to_laser_broadcaster" args="0 0 0 0 0 0 base_link laser 100"/>
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.05" />
    
    <node pkg="detection" type="Detection.py" name="Detection_node"/>
    <node pkg="detection" type="Localization.py" name="Localization_node"/>
</launch>
